n = int(input())

dp = [[0] * 10 for i in range(n+1)]

# 1자리의 오르막 수는 1부터 0까지 각 자리에서 자기 자신을 값으로 갖는다. [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
# 2자리수 부터 오르막 수는 각각의 일의 자리로 끝나는 수의 개수이다.
# 두자리의 오르막 수
# 1로 끝나는 오르막수는 11 -> 1개 -> 2로 끝나는 오르막 수는 12, 22 -> 2개 ... 9로 끝나는 오르막 수는 9개, 마지막으로 1의 자리의 오르막수의 합
# N 자리로 자리수가 커지면, j 번째로 끝나는 경우는 N-1의 1부터 J번째까지의 합이다.
# 3 자리일 경우, 1로 끝나는 오르막수는 111로 1개 -> N이 2일 경우 1로 끝나는 수 11로, 1개
## 2로 끝나는 오르막 수는 112, 122 2개 -> N이 2일 경우 2로 끝나는 수는 22로 1개로 "11" + "2"의 경우와 "1"+ "22"의 경우
# 길기 N의 오르막 수는 N-1의 각 일의 자리로 끝나는 수까지의 합이다.

for i in range(10):
    dp[1][i] = 1
for i in range(2, n+1):
    for j in range(10):
        for k in range(j+1):
            dp[i][j] += dp[i-1][k]

print(sum(dp[n]) % 10007)
